require "spec"
require "../src/*"

describe "<%-= to_capitalized(@json["exercise"].to_s) %>" do
<%- @json["cases"].as_a.each do |cases| %>
    <%= status()%> "<%-= cases["description"] %>" do
    bank_account = <%= to_capitalized(@json["exercise"].to_s) %>.new()
    <%- cases["input"]["operations"].as_a.each_with_index do |operations, i| -%>
        <% if cases["input"]["operations"].as_a.size == i + 1 && operations["operation"].to_s != "balance" %>
            expect_raises(ArgumentError) do
        <%- end -%>
        <%- if operations["operation"].to_s == "concurrent" -%>
            channel = Channel(Int32).new
            1000.times do
            spawn do
                begin
                bank_account.deposit(1)
                bank_account.balance.should eq 1
                channel.send(0)
                rescue
                channel.send(1)
                end
            end

            spawn do
                begin
                bank_account.withdraw(1)
                bank_account.balance.should eq 0
                channel.send(0)
                rescue exception
                channel.send(1)
                end
            end

            channel.receive.should eq 0
            end

            1000.times { Fiber.yield }
        <%- elsif operations["operation"].to_s == "open" || operations["operation"].to_s == "close" -%>
            bank_account.<%= operations["operation"].to_s.underscore %>
        <%- elsif operations["operation"].to_s == "deposit" || operations["operation"].to_s == "withdraw" -%>
            bank_account.<%= operations["operation"].to_s.underscore %>(<%= operations["amount"] %>)
        <%- elsif operations["operation"].to_s == "balance" -%>
            <% if cases["expected"].as_h? %>
                expect_raises(ArgumentError) do
                    bank_account.balance
                end
            <%- else -%>
                bank_account.balance.should eq <%= cases["expected"] %>
            <%- end -%>
        <%- end -%>
        <%- if cases["input"]["operations"].as_a.size == i + 1 && operations["operation"].to_s != "balance" -%>
            end
        <%- end -%>
    <%- end -%>
    end
<% end %>
end
